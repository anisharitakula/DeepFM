name: ML Model Training

on:
  push:
    branches: [github_wfs_s3_mlflow]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: mlflow_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: './model_deployment1/requirements.txt'
    
    - name: Install dependencies
      working-directory: ./model_deployment1
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install psycopg2-binary  # Explicitly install psycopg2

    - name: Prepare and run workflow script
      working-directory: ./model_deployment1
      env: 
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # Explicitly pass PostgreSQL credentials
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        # Updated PostgreSQL URI using localhost
        POSTGRES_URI: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/mlflow_db
        MLFLOW_TRACKING_URI: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/mlflow_db
        MLFLOW_ARTIFACT_URI: s3://deepfm-model
        DATASET1_S3LOC: s3://deepfm-model/input_data/ratings.csv
        DATASET2_S3LOC: s3://deepfm-model/input_data/movies.csv
      run: |
        # Comprehensive PostgreSQL connection debug
        python3 - << EOF
        import os
        import psycopg2

        try:
            conn_params = {
                'dbname': 'mlflow_db',
                'user': os.environ.get('POSTGRES_USER'),
                'password': os.environ.get('POSTGRES_PASSWORD'),
                'host': 'localhost',
                'port': '5432'
            }
            
            # Print out connection details (without password) for debugging
            print('Connection Parameters:', {k: v for k, v in conn_params.items() if k != 'password'})
            
            conn = psycopg2.connect(**conn_params)
            print('PostgreSQL connection successful!')
            
            # Create a cursor and execute a simple query
            cur = conn.cursor()
            cur.execute('SELECT version();')
            print('PostgreSQL version:', cur.fetchone())
            
            cur.close()
            conn.close()
        except Exception as e:
            print(f'PostgreSQL connection failed: {e}')
            import traceback
            traceback.print_exc()
        EOF
        
        # Verify PostgreSQL is running
        sudo systemctl status postgresql.service
        
        # List databases to confirm setup
        psql -l
        
        # Make script executable
        chmod +x train_workflow.sh
        
        # Execute script with comprehensive debug output
        bash -x train_workflow.sh